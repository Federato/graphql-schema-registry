apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "schema-registry-service.fullname" . }}
  labels:
    {{- include "schema-registry-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "schema-registry-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "schema-registry-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "schema-registry-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
          - name: DB_HOST
            value: {{ .Values.dbHost| quote}}
          - name: DB_USERNAME
            value: {{ .Values.dbUsername | quote}}
          - name: DB_SECRET
            valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
          - name: DB_PORT
            value: {{ .Values.dbPort | quote}}
          - name: DB_NAME
            value: {{ .Values.dbName| quote}}
          - name: DB_EXECUTE_MIGRATIONS
            value: {{ .Values.dbExecuteMigrations | quote}}
          - name: REDIS_HOST
            value: {{ .Values.redisHost | quote}}
          - name: REDIS_PORT
            value: {{ .Values.redisPort | quote}}
          - name: ASSETS_URL
            value: {{ .Values.assetsUrl | quote}}
          - name: ASYNC_SCHEMA_UPDATES
            value: {{ .Values.asyncSchemaUpdates | quote}}
          - name: NODE_ENV
            value: {{ .Values.nodeEnv | quote}}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
